package unit;

import captura.domain.ArticleObject;
import captura.domain.InvalidArticleObject;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

public class ArticleObjectTest {

  @Test
  @DisplayName("check if null value throw an exception")
  public void checkNullText() {
    Assertions.assertThrows(
        NullPointerException.class,
        () -> {
          ArticleObject.of(null);
        });
  }

  @Test
  @DisplayName("check if valid text returns valid instance")
  public void checkValidObject() throws InvalidArticleObject {
    final var input = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
    var articleObject = ArticleObject.of(input);
    Assertions.assertEquals(input, articleObject.getText());
  }

  @Test
  @DisplayName("check if given text is invalid for constraint of min length")
  public void checkObjectLessThanMinLength() {
    final var input = "";
    var exception =
        Assertions.assertThrows(
            InvalidArticleObject.class,
            () -> {
              ArticleObject.of(input);
            });
    var expectedMessage = "Invalid object text";
    var actualMessage = exception.getMessage();
    Assertions.assertTrue(actualMessage.contains(expectedMessage));
  }

  @Test
  @DisplayName("check if given text is invalid for constraint of max length")
  public void checkObjectGreaterThanMaxLength() {
    final var input =
        "";
    var exception =
        Assertions.assertThrows(
            InvalidArticleObject.class,
            () -> {
              ArticleObject.of(input);
            });
    var expectedMessage = "Invalid object text";
    var actualMessage = exception.getMessage();
    Assertions.assertTrue(actualMessage.contains(expectedMessage));
  }

  @Test
  @DisplayName(
      "check if parse text to html is removing html tags and replacing double white spaces")
  public void checkObjectStripHtmlTags() throws InvalidArticleObject {
    final var input = "<p>Lorem <b>ipsum</b> dolor sit amet,    consectetur adipiscing elit.</p>";
    var articleObject = ArticleObject.of(input);
    var expectedText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
    Assertions.assertEquals(articleObject.getText(), expectedText);
  }
}
